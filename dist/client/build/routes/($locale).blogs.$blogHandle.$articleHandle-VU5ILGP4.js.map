{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).blogs.$blogHandle.$articleHandle.jsx"],
  "sourcesContent": ["import {json} from '@shopify/remix-oxygen';\nimport {useLoaderData} from '@remix-run/react';\nimport {Image} from '@shopify/hydrogen';\n\n/**\n * @type {MetaFunction<typeof loader>}\n */\nexport const meta = ({data}) => {\n  return [{title: `Hydrogen | ${data?.article.title ?? ''} article`}];\n};\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({params, context}) {\n  const {blogHandle, articleHandle} = params;\n\n  if (!articleHandle || !blogHandle) {\n    throw new Response('Not found', {status: 404});\n  }\n\n  const {blog} = await context.storefront.query(ARTICLE_QUERY, {\n    variables: {blogHandle, articleHandle},\n  });\n\n  if (!blog?.articleByHandle) {\n    throw new Response(null, {status: 404});\n  }\n\n  const article = blog.articleByHandle;\n\n  return json({article});\n}\n\nexport default function Article() {\n  /** @type {LoaderReturnData} */\n  const {article} = useLoaderData();\n  const {title, image, contentHtml, author} = article;\n\n  const publishedDate = new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  }).format(new Date(article.publishedAt));\n\n  return (\n    <div className=\"article mt-6\">\n      <h1>\n        {title}\n        <span>\n          {publishedDate} &middot; {author?.name}\n        </span>\n      </h1>\n\n      {image && <Image data={image} sizes=\"90vw\" loading=\"eager\" />}\n      <div\n        dangerouslySetInnerHTML={{__html: contentHtml}}\n        className=\"article\"\n      />\n    </div>\n  );\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/objects/blog#field-blog-articlebyhandle\nconst ARTICLE_QUERY = `#graphql\n  query Article(\n    $articleHandle: String!\n    $blogHandle: String!\n    $country: CountryCode\n    $language: LanguageCode\n  ) @inContext(language: $language, country: $country) {\n    blog(handle: $blogHandle) {\n      articleByHandle(handle: $articleHandle) {\n        title\n        contentHtml\n        publishedAt\n        author: authorV2 {\n          name\n        }\n        image {\n          id\n          altText\n          url\n          width\n          height\n        }\n        seo {\n          description\n          title\n        }\n      }\n    }\n  }\n`;\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @template T @typedef {import('@remix-run/react').MetaFunction<T>} MetaFunction */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\n"],
  "mappings": "sKAiDQ,IAAAA,EAAA,OA1CKC,EAAO,CAAC,CAAC,KAAAC,CAAI,IACjB,CAAC,CAAC,MAAO,cAAcA,GAAM,QAAQ,OAAS,YAAY,CAAC,EA0BrD,SAARC,GAA2B,CAEhC,GAAM,CAAC,QAAAC,CAAO,EAAIC,EAAc,EAC1B,CAAC,MAAAC,EAAO,MAAAC,EAAO,YAAAC,EAAa,OAAAC,CAAM,EAAIL,EAEtCM,EAAgB,IAAI,KAAK,eAAe,QAAS,CACrD,KAAM,UACN,MAAO,OACP,IAAK,SACP,CAAC,EAAE,OAAO,IAAI,KAAKN,EAAQ,WAAW,CAAC,EAEvC,SACE,QAAC,OAAI,UAAU,eACb,qBAAC,MACE,UAAAE,KACD,QAAC,QACE,UAAAI,EAAc,SAAWD,GAAQ,MACpC,GACF,EAECF,MAAS,OAACI,EAAA,CAAM,KAAMJ,EAAO,MAAM,OAAO,QAAQ,QAAQ,KAC3D,OAAC,OACC,wBAAyB,CAAC,OAAQC,CAAW,EAC7C,UAAU,UACZ,GACF,CAEJ",
  "names": ["import_jsx_runtime", "meta", "data", "Article", "article", "useLoaderData", "title", "image", "contentHtml", "author", "publishedDate", "Image"]
}
