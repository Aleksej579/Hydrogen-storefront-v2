{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account.orders.$id.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/($locale).account.orders.$id.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/($locale).account.orders.$id.jsx\");\n  import.meta.hot.lastModified = \"1702303141378.887\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from '@shopify/remix-oxygen';\nimport { Link, useLoaderData } from '@remix-run/react';\nimport { Money, Image, flattenConnection } from '@shopify/hydrogen';\n\n/**\n * @type {MetaFunction<typeof loader>}\n */\nexport const meta = ({\n  data\n}) => {\n  return [{\n    title: `Order ${data?.order?.name}`\n  }];\n};\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({\n  params,\n  context\n}) {\n  const {\n    session,\n    storefront\n  } = context;\n  if (!params.id) {\n    return redirect('/account/orders');\n  }\n  const orderId = atob(params.id);\n  const customerAccessToken = await session.get('customerAccessToken');\n  if (!customerAccessToken) {\n    return redirect('/account/login');\n  }\n  const {\n    order\n  } = await storefront.query(CUSTOMER_ORDER_QUERY, {\n    variables: {\n      orderId\n    }\n  });\n  if (!order || !('lineItems' in order)) {\n    throw new Response('Order not found', {\n      status: 404\n    });\n  }\n  const lineItems = flattenConnection(order.lineItems);\n  const discountApplications = flattenConnection(order.discountApplications);\n  const firstDiscount = discountApplications[0]?.value;\n  const discountValue = firstDiscount?.__typename === 'MoneyV2' && firstDiscount;\n  const discountPercentage = firstDiscount?.__typename === 'PricingPercentageValue' && firstDiscount?.percentage;\n  return json({\n    order,\n    lineItems,\n    discountValue,\n    discountPercentage\n  });\n}\nexport default function OrderRoute() {\n  _s();\n  /** @type {LoaderReturnData} */\n  const {\n    order,\n    lineItems,\n    discountValue,\n    discountPercentage\n  } = useLoaderData();\n  return <div className=\"account-order\">\n      <h2>Order {order.name}</h2>\n      <p>Placed on {new Date(order.processedAt).toDateString()}</p>\n      <br />\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th scope=\"col\">Product</th>\n              <th scope=\"col\">Price</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            {lineItems.map((lineItem, lineItemIndex) =>\n          // eslint-disable-next-line react/no-array-index-key\n          <OrderLineRow key={lineItemIndex} lineItem={lineItem} />)}\n          </tbody>\n          <tfoot>\n            {(discountValue && discountValue.amount || discountPercentage) && <tr>\n                <th scope=\"row\" colSpan={3}>\n                  <p>Discounts</p>\n                </th>\n                <th scope=\"row\">\n                  <p>Discounts</p>\n                </th>\n                <td>\n                  {discountPercentage ? <span>-{discountPercentage}% OFF</span> : discountValue && <Money data={discountValue} />}\n                </td>\n              </tr>}\n            <tr>\n              <th scope=\"row\" colSpan={3}>\n                <p>Subtotal</p>\n              </th>\n              <th scope=\"row\">\n                <p>Subtotal</p>\n              </th>\n              <td>\n                <Money data={order.subtotalPriceV2} />\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\" colSpan={3}>\n                Tax\n              </th>\n              <th scope=\"row\">\n                <p>Tax</p>\n              </th>\n              <td>\n                <Money data={order.totalTaxV2} />\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\" colSpan={3}>\n                Total\n              </th>\n              <th scope=\"row\">\n                <p>Total</p>\n              </th>\n              <td>\n                <Money data={order.totalPriceV2} />\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n        <div>\n          <h3>Shipping Address</h3>\n          {order?.shippingAddress ? <address>\n              <p>\n                {order.shippingAddress.firstName && order.shippingAddress.firstName + ' '}\n                {order.shippingAddress.lastName}\n              </p>\n              {order?.shippingAddress?.formatted ? order.shippingAddress.formatted.map(line => <p key={line}>{line}</p>) : <></>}\n            </address> : <p>No shipping address defined</p>}\n          <h3>Status</h3>\n          <div>\n            <p>{order.fulfillmentStatus}</p>\n          </div>\n        </div>\n      </div>\n      <br />\n      <p>\n        <a target=\"_blank\" href={order.statusUrl} rel=\"noreferrer\">\n          View Order Status \u2192\n        </a>\n      </p>\n    </div>;\n}\n\n/**\n * @param {{lineItem: OrderLineItemFullFragment}}\n */\n_s(OrderRoute, \"VWNsq0d8NkbTP5ronHng6o3+YvQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = OrderRoute;\nfunction OrderLineRow({\n  lineItem\n}) {\n  return <tr key={lineItem.variant.id}>\n      <td>\n        <div>\n          <Link to={`/products/${lineItem.variant.product.handle}`}>\n            {lineItem?.variant?.image && <div>\n                <Image data={lineItem.variant.image} width={96} height={96} />\n              </div>}\n          </Link>\n          <div>\n            <p>{lineItem.title}</p>\n            <small>{lineItem.variant.title}</small>\n          </div>\n        </div>\n      </td>\n      <td>\n        <Money data={lineItem.variant.price} />\n      </td>\n      <td>{lineItem.quantity}</td>\n      <td>\n        <Money data={lineItem.discountedTotalPrice} />\n      </td>\n    </tr>;\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/objects/Order\n_c2 = OrderLineRow;\nconst CUSTOMER_ORDER_QUERY = `#graphql\n  fragment OrderMoney on MoneyV2 {\n    amount\n    currencyCode\n  }\n  fragment AddressFull on MailingAddress {\n    address1\n    address2\n    city\n    company\n    country\n    countryCodeV2\n    firstName\n    formatted\n    id\n    lastName\n    name\n    phone\n    province\n    provinceCode\n    zip\n  }\n  fragment DiscountApplication on DiscountApplication {\n    value {\n      __typename\n      ... on MoneyV2 {\n        ...OrderMoney\n      }\n      ... on PricingPercentageValue {\n        percentage\n      }\n    }\n  }\n  fragment OrderLineProductVariant on ProductVariant {\n    id\n    image {\n      altText\n      height\n      url\n      id\n      width\n    }\n    price {\n      ...OrderMoney\n    }\n    product {\n      handle\n    }\n    sku\n    title\n  }\n  fragment OrderLineItemFull on OrderLineItem {\n    title\n    quantity\n    discountAllocations {\n      allocatedAmount {\n        ...OrderMoney\n      }\n      discountApplication {\n        ...DiscountApplication\n      }\n    }\n    originalTotalPrice {\n      ...OrderMoney\n    }\n    discountedTotalPrice {\n      ...OrderMoney\n    }\n    variant {\n      ...OrderLineProductVariant\n    }\n  }\n  fragment Order on Order {\n    id\n    name\n    orderNumber\n    statusUrl\n    processedAt\n    fulfillmentStatus\n    totalTaxV2 {\n      ...OrderMoney\n    }\n    totalPriceV2 {\n      ...OrderMoney\n    }\n    subtotalPriceV2 {\n      ...OrderMoney\n    }\n    shippingAddress {\n      ...AddressFull\n    }\n    discountApplications(first: 100) {\n      nodes {\n        ...DiscountApplication\n      }\n    }\n    lineItems(first: 100) {\n      nodes {\n        ...OrderLineItemFull\n      }\n    }\n  }\n  query Order(\n    $country: CountryCode\n    $language: LanguageCode\n    $orderId: ID!\n  ) @inContext(country: $country, language: $language) {\n    order: node(id: $orderId) {\n      ... on Order {\n        ...Order\n      }\n    }\n  }\n`;\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @template T @typedef {import('@remix-run/react').MetaFunction<T>} MetaFunction */\n/** @typedef {import('storefrontapi.generated').OrderLineItemFullFragment} OrderLineItemFullFragment */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\nvar _c, _c2;\n$RefreshReg$(_c, \"OrderRoute\");\n$RefreshReg$(_c2, \"OrderLineRow\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
