{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account.orders.$id.jsx"],
  "sourcesContent": ["import {json, redirect} from '@shopify/remix-oxygen';\nimport {Link, useLoaderData} from '@remix-run/react';\nimport {Money, Image, flattenConnection} from '@shopify/hydrogen';\n\n/**\n * @type {MetaFunction<typeof loader>}\n */\nexport const meta = ({data}) => {\n  return [{title: `Order ${data?.order?.name}`}];\n};\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({params, context}) {\n  const {session, storefront} = context;\n\n  if (!params.id) {\n    return redirect('/account/orders');\n  }\n\n  const orderId = atob(params.id);\n  const customerAccessToken = await session.get('customerAccessToken');\n\n  if (!customerAccessToken) {\n    return redirect('/account/login');\n  }\n\n  const {order} = await storefront.query(CUSTOMER_ORDER_QUERY, {\n    variables: {orderId},\n  });\n\n  if (!order || !('lineItems' in order)) {\n    throw new Response('Order not found', {status: 404});\n  }\n\n  const lineItems = flattenConnection(order.lineItems);\n  const discountApplications = flattenConnection(order.discountApplications);\n\n  const firstDiscount = discountApplications[0]?.value;\n\n  const discountValue =\n    firstDiscount?.__typename === 'MoneyV2' && firstDiscount;\n\n  const discountPercentage =\n    firstDiscount?.__typename === 'PricingPercentageValue' &&\n    firstDiscount?.percentage;\n\n  return json({\n    order,\n    lineItems,\n    discountValue,\n    discountPercentage,\n  });\n}\n\nexport default function OrderRoute() {\n  /** @type {LoaderReturnData} */\n  const {order, lineItems, discountValue, discountPercentage} = useLoaderData();\n  return (\n    <div className=\"account-order\">\n      <h2>Order {order.name}</h2>\n      <p>Placed on {new Date(order.processedAt).toDateString()}</p>\n      <br />\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th scope=\"col\">Product</th>\n              <th scope=\"col\">Price</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            {lineItems.map((lineItem, lineItemIndex) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <OrderLineRow key={lineItemIndex} lineItem={lineItem} />\n            ))}\n          </tbody>\n          <tfoot>\n            {((discountValue && discountValue.amount) ||\n              discountPercentage) && (\n              <tr>\n                <th scope=\"row\" colSpan={3}>\n                  <p>Discounts</p>\n                </th>\n                <th scope=\"row\">\n                  <p>Discounts</p>\n                </th>\n                <td>\n                  {discountPercentage ? (\n                    <span>-{discountPercentage}% OFF</span>\n                  ) : (\n                    discountValue && <Money data={discountValue} />\n                  )}\n                </td>\n              </tr>\n            )}\n            <tr>\n              <th scope=\"row\" colSpan={3}>\n                <p>Subtotal</p>\n              </th>\n              <th scope=\"row\">\n                <p>Subtotal</p>\n              </th>\n              <td>\n                <Money data={order.subtotalPriceV2} />\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\" colSpan={3}>\n                Tax\n              </th>\n              <th scope=\"row\">\n                <p>Tax</p>\n              </th>\n              <td>\n                <Money data={order.totalTaxV2} />\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\" colSpan={3}>\n                Total\n              </th>\n              <th scope=\"row\">\n                <p>Total</p>\n              </th>\n              <td>\n                <Money data={order.totalPriceV2} />\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n        <div>\n          <h3>Shipping Address</h3>\n          {order?.shippingAddress ? (\n            <address>\n              <p>\n                {order.shippingAddress.firstName &&\n                  order.shippingAddress.firstName + ' '}\n                {order.shippingAddress.lastName}\n              </p>\n              {order?.shippingAddress?.formatted ? (\n                order.shippingAddress.formatted.map((line) => (\n                  <p key={line}>{line}</p>\n                ))\n              ) : (\n                <></>\n              )}\n            </address>\n          ) : (\n            <p>No shipping address defined</p>\n          )}\n          <h3>Status</h3>\n          <div>\n            <p>{order.fulfillmentStatus}</p>\n          </div>\n        </div>\n      </div>\n      <br />\n      <p>\n        <a target=\"_blank\" href={order.statusUrl} rel=\"noreferrer\">\n          View Order Status \u2192\n        </a>\n      </p>\n    </div>\n  );\n}\n\n/**\n * @param {{lineItem: OrderLineItemFullFragment}}\n */\nfunction OrderLineRow({lineItem}) {\n  return (\n    <tr key={lineItem.variant.id}>\n      <td>\n        <div>\n          <Link to={`/products/${lineItem.variant.product.handle}`}>\n            {lineItem?.variant?.image && (\n              <div>\n                <Image data={lineItem.variant.image} width={96} height={96} />\n              </div>\n            )}\n          </Link>\n          <div>\n            <p>{lineItem.title}</p>\n            <small>{lineItem.variant.title}</small>\n          </div>\n        </div>\n      </td>\n      <td>\n        <Money data={lineItem.variant.price} />\n      </td>\n      <td>{lineItem.quantity}</td>\n      <td>\n        <Money data={lineItem.discountedTotalPrice} />\n      </td>\n    </tr>\n  );\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/objects/Order\nconst CUSTOMER_ORDER_QUERY = `#graphql\n  fragment OrderMoney on MoneyV2 {\n    amount\n    currencyCode\n  }\n  fragment AddressFull on MailingAddress {\n    address1\n    address2\n    city\n    company\n    country\n    countryCodeV2\n    firstName\n    formatted\n    id\n    lastName\n    name\n    phone\n    province\n    provinceCode\n    zip\n  }\n  fragment DiscountApplication on DiscountApplication {\n    value {\n      __typename\n      ... on MoneyV2 {\n        ...OrderMoney\n      }\n      ... on PricingPercentageValue {\n        percentage\n      }\n    }\n  }\n  fragment OrderLineProductVariant on ProductVariant {\n    id\n    image {\n      altText\n      height\n      url\n      id\n      width\n    }\n    price {\n      ...OrderMoney\n    }\n    product {\n      handle\n    }\n    sku\n    title\n  }\n  fragment OrderLineItemFull on OrderLineItem {\n    title\n    quantity\n    discountAllocations {\n      allocatedAmount {\n        ...OrderMoney\n      }\n      discountApplication {\n        ...DiscountApplication\n      }\n    }\n    originalTotalPrice {\n      ...OrderMoney\n    }\n    discountedTotalPrice {\n      ...OrderMoney\n    }\n    variant {\n      ...OrderLineProductVariant\n    }\n  }\n  fragment Order on Order {\n    id\n    name\n    orderNumber\n    statusUrl\n    processedAt\n    fulfillmentStatus\n    totalTaxV2 {\n      ...OrderMoney\n    }\n    totalPriceV2 {\n      ...OrderMoney\n    }\n    subtotalPriceV2 {\n      ...OrderMoney\n    }\n    shippingAddress {\n      ...AddressFull\n    }\n    discountApplications(first: 100) {\n      nodes {\n        ...DiscountApplication\n      }\n    }\n    lineItems(first: 100) {\n      nodes {\n        ...OrderLineItemFull\n      }\n    }\n  }\n  query Order(\n    $country: CountryCode\n    $language: LanguageCode\n    $orderId: ID!\n  ) @inContext(country: $country, language: $language) {\n    order: node(id: $orderId) {\n      ... on Order {\n        ...Order\n      }\n    }\n  }\n`;\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @template T @typedef {import('@remix-run/react').MetaFunction<T>} MetaFunction */\n/** @typedef {import('storefrontapi.generated').OrderLineItemFullFragment} OrderLineItemFullFragment */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\n"],
  "mappings": "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",
  "names": ["import_jsx_runtime", "meta", "data", "OrderRoute", "order", "lineItems", "discountValue", "discountPercentage", "useLoaderData", "lineItem", "lineItemIndex", "OrderLineRow", "Money", "line", "Link", "Image"]
}
