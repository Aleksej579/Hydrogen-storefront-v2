{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).blogs._index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/($locale).blogs._index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/($locale).blogs._index.jsx\");\n  import.meta.hot.lastModified = \"1702466453174.9817\";\n}\n// REMIX HMR END\n\nimport { json } from '@shopify/remix-oxygen';\nimport { Link, useLoaderData } from '@remix-run/react';\nimport { Pagination, getPaginationVariables } from '@shopify/hydrogen';\n\n/**\n * @type {MetaFunction}\n */\nexport const meta = () => {\n  return [{\n    title: `Hydrogen | Blogs`\n  }];\n};\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport const loader = async ({\n  request,\n  context: {\n    storefront\n  }\n}) => {\n  const paginationVariables = getPaginationVariables(request, {\n    pageBy: 10\n  });\n  const {\n    blogs\n  } = await storefront.query(BLOGS_QUERY, {\n    variables: {\n      ...paginationVariables\n    }\n  });\n  return json({\n    blogs\n  });\n};\nexport default function Blogs() {\n  _s();\n  /** @type {LoaderReturnData} */\n  const {\n    blogs\n  } = useLoaderData();\n  return <div className=\"blogs mt-6\">\n      <h1>Blogs</h1>\n      <div className=\"blogs-grid\">\n        <Pagination connection={blogs}>\n          {({\n          nodes,\n          isLoading,\n          PreviousLink,\n          NextLink\n        }) => {\n          return <>\n                <PreviousLink>\n                  {isLoading ? 'Loading...' : <span>\u2191 Load previous</span>}\n                </PreviousLink>\n                {nodes.map(blog => {\n              return <Link className=\"blog\" key={blog.handle} prefetch=\"intent\" to={`/blogs/${blog.handle}`}>\n                      <h2>{blog.title}</h2>\n                    </Link>;\n            })}\n                <NextLink>\n                  {isLoading ? 'Loading...' : <span>Load more \u2193</span>}\n                </NextLink>\n              </>;\n        }}\n        </Pagination>\n      </div>\n    </div>;\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/objects/blog\n_s(Blogs, \"B3TZsVovAlVOSbBtypXSdnaESsY=\", false, function () {\n  return [useLoaderData];\n});\n_c = Blogs;\nconst BLOGS_QUERY = `#graphql\n  query Blogs(\n    $country: CountryCode\n    $endCursor: String\n    $first: Int\n    $language: LanguageCode\n    $last: Int\n    $startCursor: String\n  ) @inContext(country: $country, language: $language) {\n    blogs(\n      first: $first,\n      last: $last,\n      before: $startCursor,\n      after: $endCursor\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      nodes {\n        title\n        handle\n        seo {\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @template T @typedef {import('@remix-run/react').MetaFunction<T>} MetaFunction */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\nvar _c;\n$RefreshReg$(_c, \"Blogs\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAgEM;AA/DN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4CAA8C,EAAE;AAAA,EACzF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuC;AACvC,cAAY,IAAI,eAAe;AACjC;AAUO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,CAAC;AACH;AAyBe,SAAR,QAAyB;AAC9B,KAAG;AAEH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SAAI,WAAU,cAClB;AAAA,uDAAC,QAAG,qBAAJ;AAAA;AAAA;AAAA;AAAA,WAAS;AAAA,IACT,mDAAC,SAAI,WAAU,cACb,6DAAC,MAAW,YAAY,OACrB,WAAC;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,MAAM;AACJ,aAAO,sFACD;AAAA,2DAAC,gBACE,sBAAY,eAAe,mDAAC,UAAK,oCAAN;AAAA;AAAA;AAAA;AAAA,eAAqB,KADnD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACC,MAAM,IAAI,UAAQ;AACrB,iBAAO,mDAAC,QAAK,WAAU,QAAyB,UAAS,UAAS,IAAI,UAAU,KAAK,UAC7E,6DAAC,QAAI,eAAK,SAAV;AAAA;AAAA;AAAA;AAAA,iBAAgB,KADW,KAAK,QAAjC;AAAA;AAAA;AAAA;AAAA,iBAED;AAAA,QACR,CAAC;AAAA,QACG,mDAAC,YACE,sBAAY,eAAe,mDAAC,UAAK,gCAAN;AAAA;AAAA;AAAA;AAAA,eAAiB,KAD/C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAXC;AAAA;AAAA;AAAA;AAAA,aAYH;AAAA,IACN,KApBA;AAAA;AAAA;AAAA;AAAA,WAqBA,KAtBF;AAAA;AAAA;AAAA;AAAA,WAuBA;AAAA,OAzBG;AAAA;AAAA;AAAA;AAAA,SA0BL;AACJ;AAGA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AAqCL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
