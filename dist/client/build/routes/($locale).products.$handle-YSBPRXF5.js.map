{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).products.$handle.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/($locale).products.$handle.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/($locale).products.$handle.jsx\");\n  import.meta.hot.lastModified = \"1702303140998.8953\";\n}\n// REMIX HMR END\n\nimport { Suspense } from 'react';\nimport { defer, redirect } from '@shopify/remix-oxygen';\nimport { Await, Link, useLoaderData } from '@remix-run/react';\nimport { Image, Money, VariantSelector, getSelectedProductOptions, CartForm } from '@shopify/hydrogen';\nimport { getVariantUrl } from '~/utils';\n\n/**\n * @type {MetaFunction<typeof loader>}\n */\nexport const meta = ({\n  data\n}) => {\n  return [{\n    title: `Hydrogen | ${data?.product.title ?? ''}`\n  }];\n};\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({\n  params,\n  request,\n  context\n}) {\n  const {\n    handle\n  } = params;\n  const {\n    storefront\n  } = context;\n  const selectedOptions = getSelectedProductOptions(request).filter(option =>\n  // Filter out Shopify predictive search query params\n  !option.name.startsWith('_sid') && !option.name.startsWith('_pos') && !option.name.startsWith('_psq') && !option.name.startsWith('_ss') && !option.name.startsWith('_v') &&\n  // Filter out third party tracking params\n  !option.name.startsWith('fbclid'));\n  if (!handle) {\n    throw new Error('Expected product handle to be defined');\n  }\n\n  // await the query for the critical product data\n  const {\n    product\n  } = await storefront.query(PRODUCT_QUERY, {\n    variables: {\n      handle,\n      selectedOptions\n    }\n  });\n  if (!product?.id) {\n    throw new Response(null, {\n      status: 404\n    });\n  }\n  const firstVariant = product.variants.nodes[0];\n  const firstVariantIsDefault = Boolean(firstVariant.selectedOptions.find(option => option.name === 'Title' && option.value === 'Default Title'));\n  if (firstVariantIsDefault) {\n    product.selectedVariant = firstVariant;\n  } else {\n    // if no selected variant was returned from the selected options,\n    // we redirect to the first variant's url with it's selected options applied\n    if (!product.selectedVariant) {\n      throw redirectToFirstVariant({\n        product,\n        request\n      });\n    }\n  }\n\n  // In order to show which variants are available in the UI, we need to query\n  // all of them. But there might be a *lot*, so instead separate the variants\n  // into it's own separate query that is deferred. So there's a brief moment\n  // where variant options might show as available when they're not, but after\n  // this deffered query resolves, the UI will update.\n  const variants = storefront.query(VARIANTS_QUERY, {\n    variables: {\n      handle\n    }\n  });\n  return defer({\n    product,\n    variants\n  });\n}\n\n/**\n * @param {{\n *   product: ProductFragment;\n *   request: Request;\n * }}\n */\nfunction redirectToFirstVariant({\n  product,\n  request\n}) {\n  const url = new URL(request.url);\n  const firstVariant = product.variants.nodes[0];\n  return redirect(getVariantUrl({\n    pathname: url.pathname,\n    handle: product.handle,\n    selectedOptions: firstVariant.selectedOptions,\n    searchParams: new URLSearchParams(url.search)\n  }), {\n    status: 302\n  });\n}\nexport default function Product() {\n  _s();\n  /** @type {LoaderReturnData} */\n  const {\n    product,\n    variants\n  } = useLoaderData();\n  const {\n    selectedVariant\n  } = product;\n  return <div className=\"product\">\n      <ProductImage image={selectedVariant?.image} />\n      <ProductMain selectedVariant={selectedVariant} product={product} variants={variants} />\n    </div>;\n}\n\n/**\n * @param {{image: ProductVariantFragment['image']}}\n */\n_s(Product, \"cV1U70DEisIW3GITWEisgZMpYGo=\", false, function () {\n  return [useLoaderData];\n});\n_c = Product;\nfunction ProductImage({\n  image\n}) {\n  if (!image) {\n    return <div className=\"product-image\" />;\n  }\n  return <div className=\"product-image\">\n      <Image alt={image.altText || 'Product Image'} aspectRatio=\"1/1\" data={image} key={image.id} sizes=\"(min-width: 45em) 50vw, 100vw\" />\n    </div>;\n}\n\n/**\n * @param {{\n *   product: ProductFragment;\n *   selectedVariant: ProductFragment['selectedVariant'];\n *   variants: Promise<ProductVariantsQuery>;\n * }}\n */\n_c2 = ProductImage;\nfunction ProductMain({\n  selectedVariant,\n  product,\n  variants\n}) {\n  const {\n    title,\n    descriptionHtml\n  } = product;\n  return <div className=\"product-main\">\n      <h1>{title}</h1>\n      <ProductPrice selectedVariant={selectedVariant} />\n      <br />\n      <Suspense fallback={<ProductForm product={product} selectedVariant={selectedVariant} variants={[]} />}>\n        <Await errorElement=\"There was a problem loading product variants\" resolve={variants}>\n          {data => <ProductForm product={product} selectedVariant={selectedVariant} variants={data.product?.variants.nodes || []} />}\n        </Await>\n      </Suspense>\n      <br />\n      <br />\n      <p>\n        <strong>Description</strong>\n      </p>\n      <br />\n      <div dangerouslySetInnerHTML={{\n      __html: descriptionHtml\n    }} />\n      <br />\n    </div>;\n}\n\n/**\n * @param {{\n *   selectedVariant: ProductFragment['selectedVariant'];\n * }}\n */\n_c3 = ProductMain;\nfunction ProductPrice({\n  selectedVariant\n}) {\n  return <div className=\"product-price\">\n      {selectedVariant?.compareAtPrice ? <>\n          <p>Sale</p>\n          <br />\n          <div className=\"product-price-on-sale\">\n            {selectedVariant ? <Money data={selectedVariant.price} /> : null}\n            <s>\n              <Money data={selectedVariant.compareAtPrice} />\n            </s>\n          </div>\n        </> : selectedVariant?.price && <Money data={selectedVariant?.price} />}\n    </div>;\n}\n\n/**\n * @param {{\n *   product: ProductFragment;\n *   selectedVariant: ProductFragment['selectedVariant'];\n *   variants: Array<ProductVariantFragment>;\n * }}\n */\n_c4 = ProductPrice;\nfunction ProductForm({\n  product,\n  selectedVariant,\n  variants\n}) {\n  return <div className=\"product-form\">\n      <VariantSelector handle={product.handle} options={product.options} variants={variants}>\n        {({\n        option\n      }) => <ProductOptions key={option.name} option={option} />}\n      </VariantSelector>\n      <br />\n      <AddToCartButton disabled={!selectedVariant || !selectedVariant.availableForSale} onClick={() => {\n      window.location.href = window.location.href + '#cart-aside';\n    }} lines={selectedVariant ? [{\n      merchandiseId: selectedVariant.id,\n      quantity: 1\n    }] : []}>\n        {selectedVariant?.availableForSale ? 'Add to cart' : 'Sold out'}\n      </AddToCartButton>\n    </div>;\n}\n\n/**\n * @param {{option: VariantOption}}\n */\n_c5 = ProductForm;\nfunction ProductOptions({\n  option\n}) {\n  return <div className=\"product-options\" key={option.name}>\n      <h5>{option.name}</h5>\n      <div className=\"product-options-grid\">\n        {option.values.map(({\n        value,\n        isAvailable,\n        isActive,\n        to\n      }) => {\n        return <Link className=\"product-options-item\" key={option.name + value} prefetch=\"intent\" preventScrollReset replace to={to} style={{\n          border: isActive ? '1px solid black' : '1px solid transparent',\n          opacity: isAvailable ? 1 : 0.3\n        }}>\n              {value}\n            </Link>;\n      })}\n      </div>\n      <br />\n    </div>;\n}\n\n/**\n * @param {{\n *   analytics?: unknown;\n *   children: React.ReactNode;\n *   disabled?: boolean;\n *   lines: CartLineInput[];\n *   onClick?: () => void;\n * }}\n */\n_c6 = ProductOptions;\nfunction AddToCartButton({\n  analytics,\n  children,\n  disabled,\n  lines,\n  onClick\n}) {\n  return <CartForm route=\"/cart\" inputs={{\n    lines\n  }} action={CartForm.ACTIONS.LinesAdd}>\n      {fetcher => <>\n          <input name=\"analytics\" type=\"hidden\" value={JSON.stringify(analytics)} />\n          <button type=\"submit\" onClick={onClick} disabled={disabled ?? fetcher.state !== 'idle'}>\n            {children}\n          </button>\n        </>}\n    </CartForm>;\n}\n_c7 = AddToCartButton;\nconst PRODUCT_VARIANT_FRAGMENT = `#graphql\n  fragment ProductVariant on ProductVariant {\n    availableForSale\n    compareAtPrice {\n      amount\n      currencyCode\n    }\n    id\n    image {\n      __typename\n      id\n      url\n      altText\n      width\n      height\n    }\n    price {\n      amount\n      currencyCode\n    }\n    product {\n      title\n      handle\n    }\n    selectedOptions {\n      name\n      value\n    }\n    sku\n    title\n    unitPrice {\n      amount\n      currencyCode\n    }\n  }\n`;\nconst PRODUCT_FRAGMENT = `#graphql\n  fragment Product on Product {\n    id\n    title\n    vendor\n    handle\n    descriptionHtml\n    description\n    options {\n      name\n      values\n    }\n    selectedVariant: variantBySelectedOptions(selectedOptions: $selectedOptions) {\n      ...ProductVariant\n    }\n    variants(first: 1) {\n      nodes {\n        ...ProductVariant\n      }\n    }\n    seo {\n      description\n      title\n    }\n  }\n  ${PRODUCT_VARIANT_FRAGMENT}\n`;\nconst PRODUCT_QUERY = `#graphql\n  query Product(\n    $country: CountryCode\n    $handle: String!\n    $language: LanguageCode\n    $selectedOptions: [SelectedOptionInput!]!\n  ) @inContext(country: $country, language: $language) {\n    product(handle: $handle) {\n      ...Product\n    }\n  }\n  ${PRODUCT_FRAGMENT}\n`;\nconst PRODUCT_VARIANTS_FRAGMENT = `#graphql\n  fragment ProductVariants on Product {\n    variants(first: 250) {\n      nodes {\n        ...ProductVariant\n      }\n    }\n  }\n  ${PRODUCT_VARIANT_FRAGMENT}\n`;\nconst VARIANTS_QUERY = `#graphql\n  ${PRODUCT_VARIANTS_FRAGMENT}\n  query ProductVariants(\n    $country: CountryCode\n    $language: LanguageCode\n    $handle: String!\n  ) @inContext(country: $country, language: $language) {\n    product(handle: $handle) {\n      ...ProductVariants\n    }\n  }\n`;\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @template T @typedef {import('@remix-run/react').MetaFunction<T>} MetaFunction */\n/** @typedef {import('@remix-run/react').FetcherWithComponents} FetcherWithComponents */\n/** @typedef {import('storefrontapi.generated').ProductFragment} ProductFragment */\n/** @typedef {import('storefrontapi.generated').ProductVariantsQuery} ProductVariantsQuery */\n/** @typedef {import('storefrontapi.generated').ProductVariantFragment} ProductVariantFragment */\n/** @typedef {import('@shopify/hydrogen').VariantOption} VariantOption */\n/** @typedef {import('@shopify/hydrogen/storefront-api-types').CartLineInput} CartLineInput */\n/** @typedef {import('@shopify/hydrogen/storefront-api-types').SelectedOption} SelectedOption */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Product\");\n$RefreshReg$(_c2, \"ProductImage\");\n$RefreshReg$(_c3, \"ProductMain\");\n$RefreshReg$(_c4, \"ProductPrice\");\n$RefreshReg$(_c5, \"ProductForm\");\n$RefreshReg$(_c6, \"ProductOptions\");\n$RefreshReg$(_c7, \"AddToCartButton\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
