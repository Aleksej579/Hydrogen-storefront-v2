{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).cart.$lines.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/($locale).cart.$lines.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/($locale).cart.$lines.jsx\");\n  import.meta.hot.lastModified = \"1702303140902.8972\";\n}\n// REMIX HMR END\n\nimport { redirect } from '@shopify/remix-oxygen';\n\n/**\n * Automatically creates a new cart based on the URL and redirects straight to checkout.\n * Expected URL structure:\n * ```js\n * /cart/<variant_id>:<quantity>\n *\n * ```\n *\n * More than one `<variant_id>:<quantity>` separated by a comma, can be supplied in the URL, for\n * carts with more than one product variant.\n *\n * @example\n * Example path creating a cart with two product variants, different quantities, and a discount code in the querystring:\n * ```js\n * /cart/41007289663544:1,41007289696312:2?discount=HYDROBOARD\n *\n * ```\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({\n  request,\n  context,\n  params\n}) {\n  const {\n    cart\n  } = context;\n  const {\n    lines\n  } = params;\n  if (!lines) return redirect('/cart');\n  const linesMap = lines.split(',').map(line => {\n    const lineDetails = line.split(':');\n    const variantId = lineDetails[0];\n    const quantity = parseInt(lineDetails[1], 10);\n    return {\n      merchandiseId: `gid://shopify/ProductVariant/${variantId}`,\n      quantity\n    };\n  });\n  const url = new URL(request.url);\n  const searchParams = new URLSearchParams(url.search);\n  const discount = searchParams.get('discount');\n  const discountArray = discount ? [discount] : [];\n\n  // create a cart\n  const result = await cart.create({\n    lines: linesMap,\n    discountCodes: discountArray\n  });\n  const cartResult = result.cart;\n  if (result.errors?.length || !cartResult) {\n    throw new Response('Link may be expired. Try checking the URL.', {\n      status: 410\n    });\n  }\n\n  // Update cart id in cookie\n  const headers = cart.setCartId(cartResult.id);\n\n  // redirect to checkout\n  if (cartResult.checkoutUrl) {\n    return redirect(cartResult.checkoutUrl, {\n      headers\n    });\n  } else {\n    throw new Error('No checkout URL found');\n  }\n}\nexport default function Component() {\n  return null;\n}\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\n_c = Component;\nvar _c;\n$RefreshReg$(_c, \"Component\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;AACA,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,2CAA6C,EAAE;AAAA,EACxF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAsC;AACtC,cAAY,IAAI,eAAe;AACjC;AA0Ee,SAAR,YAA6B;AAClC,SAAO;AACT;AAIA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
