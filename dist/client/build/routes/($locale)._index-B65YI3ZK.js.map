{
  "version": 3,
  "sources": ["../../../../app/routes/($locale)._index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/($locale)._index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/($locale)._index.jsx\");\n  import.meta.hot.lastModified = \"1702404600541.7905\";\n}\n// REMIX HMR END\n\nimport { defer } from '@shopify/remix-oxygen';\nimport { Await, useLoaderData, Link } from '@remix-run/react';\nimport { Suspense } from 'react';\nimport { Image, Money } from '@shopify/hydrogen';\n\n/**\n * @type {MetaFunction}\n */\nexport const meta = () => {\n  return [{\n    title: 'Hydrogen | Home'\n  }];\n};\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({\n  context\n}) {\n  const {\n    storefront\n  } = context;\n  const {\n    collections\n  } = await storefront.query(FEATURED_COLLECTION_QUERY);\n  const featuredCollection = collections.nodes[0];\n  const recommendedProducts = storefront.query(RECOMMENDED_PRODUCTS_QUERY);\n  return defer({\n    featuredCollection,\n    recommendedProducts\n  });\n}\nexport default function Homepage() {\n  _s();\n  /** @type {LoaderReturnData} */\n  const data = useLoaderData();\n  return <div className=\"home\">\n      <FeaturedCollection collection={data.featuredCollection} />\n      <RecommendedProducts products={data.recommendedProducts} />\n    </div>;\n}\n\n/**\n * @param {{\n *   collection: FeaturedCollectionFragment;\n * }}\n */\n_s(Homepage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = Homepage;\nfunction FeaturedCollection({\n  collection\n}) {\n  if (!collection) return null;\n  const image = collection?.image;\n  return <Link className=\"featured-collection\" to={`/collections/${collection.handle}`}>\n      {image && <div className=\"featured-collection-image\">\n          <Image data={image} sizes=\"100vw\" />\n          <h1 className=\"featured-collection__title\">{collection.title}</h1>\n          <p className=\"text-lg mb-8\">\n            Welcome to your custom storefront. Let\u2019s get building.\n          </p>\n        </div>}\n    </Link>;\n}\n\n/**\n * @param {{\n *   products: Promise<RecommendedProductsQuery>;\n * }}\n */\n_c2 = FeaturedCollection;\nfunction RecommendedProducts({\n  products\n}) {\n  return <div className=\"recommended-products\">\n      <h2>Recommended Products</h2>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Await resolve={products}>\n          {({\n          products\n        }) => <div className=\"recommended-products-grid\">\n              {products.nodes.map(product => <Link key={product.id} className=\"recommended-product\" to={`/products/${product.handle}`}>\n                  <Image data={product.images.nodes[0]} aspectRatio=\"1/1\" sizes=\"(min-width: 45em) 20vw, 50vw\" />\n                  <h4>{product.title}</h4>\n                  <small>\n                    <Money data={product.priceRange.minVariantPrice} />\n                  </small>\n                </Link>)}\n            </div>}\n        </Await>\n      </Suspense>\n      <br />\n    </div>;\n}\n_c3 = RecommendedProducts;\nconst FEATURED_COLLECTION_QUERY = `#graphql\n  fragment FeaturedCollection on Collection {\n    id\n    title\n    image {\n      id\n      url\n      altText\n      width\n      height\n    }\n    handle\n  }\n  query FeaturedCollection($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    collections(first: 1, sortKey: UPDATED_AT, reverse: true) {\n      nodes {\n        ...FeaturedCollection\n      }\n    }\n  }\n`;\nconst RECOMMENDED_PRODUCTS_QUERY = `#graphql\n  fragment RecommendedProduct on Product {\n    id\n    title\n    handle\n    priceRange {\n      minVariantPrice {\n        amount\n        currencyCode\n      }\n    }\n    images(first: 1) {\n      nodes {\n        id\n        url\n        altText\n        width\n        height\n      }\n    }\n  }\n  query RecommendedProducts ($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    products(first: 4, sortKey: UPDATED_AT, reverse: true) {\n      nodes {\n        ...RecommendedProduct\n      }\n    }\n  }\n`;\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @template T @typedef {import('@remix-run/react').MetaFunction<T>} MetaFunction */\n/** @typedef {import('storefrontapi.generated').FeaturedCollectionFragment} FeaturedCollectionFragment */\n/** @typedef {import('storefrontapi.generated').RecommendedProductsQuery} RecommendedProductsQuery */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Homepage\");\n$RefreshReg$(_c2, \"FeaturedCollection\");\n$RefreshReg$(_c3, \"RecommendedProducts\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "products"]
}
