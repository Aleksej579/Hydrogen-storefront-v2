{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).policies._index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/($locale).policies._index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/($locale).policies._index.jsx\");\n  import.meta.hot.lastModified = \"1702303141130.8923\";\n}\n// REMIX HMR END\n\nimport { json } from '@shopify/remix-oxygen';\nimport { useLoaderData, Link } from '@remix-run/react';\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({\n  context\n}) {\n  const data = await context.storefront.query(POLICIES_QUERY);\n  const policies = Object.values(data.shop || {});\n  if (!policies.length) {\n    throw new Response('No policies found', {\n      status: 404\n    });\n  }\n  return json({\n    policies\n  });\n}\nexport default function Policies() {\n  _s();\n  /** @type {LoaderReturnData} */\n  const {\n    policies\n  } = useLoaderData();\n  return <div className=\"policies\">\n      <h1>Policies</h1>\n      <div>\n        {policies.map(policy => {\n        if (!policy) return null;\n        return <fieldset key={policy.id}>\n              <Link to={`/policies/${policy.handle}`}>{policy.title}</Link>\n            </fieldset>;\n      })}\n      </div>\n    </div>;\n}\n_s(Policies, \"qILlRnlKUbKnmDp/2bx3pTxZVH4=\", false, function () {\n  return [useLoaderData];\n});\n_c = Policies;\nconst POLICIES_QUERY = `#graphql\n  fragment PolicyItem on ShopPolicy {\n    id\n    title\n    handle\n  }\n  query Policies ($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    shop {\n      privacyPolicy {\n        ...PolicyItem\n      }\n      shippingPolicy {\n        ...PolicyItem\n      }\n      termsOfService {\n        ...PolicyItem\n      }\n      refundPolicy {\n        ...PolicyItem\n      }\n      subscriptionPolicy {\n        id\n        title\n        handle\n      }\n    }\n  }\n`;\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\nvar _c;\n$RefreshReg$(_c, \"Policies\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;AAgDM;AA/CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,+CAAiD,EAAE;AAAA,EAC5F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA0C;AAC1C,cAAY,IAAI,eAAe;AACjC;AAuBe,SAAR,WAA4B;AACjC,KAAG;AAEH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SAAI,WAAU,YAClB;AAAA,uDAAC,QAAG,wBAAJ;AAAA;AAAA;AAAA;AAAA,WAAY;AAAA,IACZ,mDAAC,SACE,mBAAS,IAAI,YAAU;AACxB,UAAI,CAAC;AAAQ,eAAO;AACpB,aAAO,mDAAC,cACF,6DAAC,QAAK,IAAI,aAAa,OAAO,UAAW,iBAAO,SAAhD;AAAA;AAAA;AAAA;AAAA,aAAsD,KADtC,OAAO,IAAtB;AAAA;AAAA;AAAA;AAAA,aAEH;AAAA,IACN,CAAC,KAND;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OATG;AAAA;AAAA;AAAA;AAAA,SAUL;AACJ;AACA,GAAG,UAAU,gCAAgC,OAAO,WAAY;AAC9D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AAiCL,IAAI;AACJ,aAAa,IAAI,UAAU;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
