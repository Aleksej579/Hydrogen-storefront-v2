{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/($locale).account.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/($locale).account.jsx\");\n  import.meta.hot.lastModified = \"1702303141518.884\";\n}\n// REMIX HMR END\n\nimport { Form, NavLink, Outlet, useLoaderData } from '@remix-run/react';\nimport { json, redirect } from '@shopify/remix-oxygen';\nexport function shouldRevalidate() {\n  return true;\n}\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({\n  request,\n  context\n}) {\n  const {\n    session,\n    storefront\n  } = context;\n  const {\n    pathname\n  } = new URL(request.url);\n  const customerAccessToken = await session.get('customerAccessToken');\n  const isLoggedIn = !!customerAccessToken?.accessToken;\n  const isAccountHome = pathname === '/account' || pathname === '/account/';\n  const isPrivateRoute = /^\\/account\\/(orders|orders\\/.*|profile|addresses|addresses\\/.*)$/.test(pathname);\n  if (!isLoggedIn) {\n    if (isPrivateRoute || isAccountHome) {\n      session.unset('customerAccessToken');\n      return redirect('/account/login', {\n        headers: {\n          'Set-Cookie': await session.commit()\n        }\n      });\n    } else {\n      // public subroute such as /account/login...\n      return json({\n        isLoggedIn: false,\n        isAccountHome,\n        isPrivateRoute,\n        customer: null\n      });\n    }\n  } else {\n    // loggedIn, default redirect to the orders page\n    if (isAccountHome) {\n      return redirect('/account/orders');\n    }\n  }\n  try {\n    const {\n      customer\n    } = await storefront.query(CUSTOMER_QUERY, {\n      variables: {\n        customerAccessToken: customerAccessToken.accessToken,\n        country: storefront.i18n.country,\n        language: storefront.i18n.language\n      },\n      cache: storefront.CacheNone()\n    });\n    if (!customer) {\n      throw new Error('Customer not found');\n    }\n    return json({\n      isLoggedIn,\n      isPrivateRoute,\n      isAccountHome,\n      customer\n    }, {\n      headers: {\n        'Cache-Control': 'no-cache, no-store, must-revalidate'\n      }\n    });\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('There was a problem loading account', error);\n    session.unset('customerAccessToken');\n    return redirect('/account/login', {\n      headers: {\n        'Set-Cookie': await session.commit()\n      }\n    });\n  }\n}\nexport default function Acccount() {\n  _s();\n  /** @type {LoaderReturnData} */\n  const {\n    customer,\n    isPrivateRoute,\n    isAccountHome\n  } = useLoaderData();\n  if (!isPrivateRoute && !isAccountHome) {\n    return <Outlet context={{\n      customer\n    }} />;\n  }\n  return <AccountLayout customer={customer}>\n      <br />\n      <br />\n      <Outlet context={{\n      customer\n    }} />\n    </AccountLayout>;\n}\n\n/**\n * @param {{\n *   customer: CustomerFragment;\n *   children: React.ReactNode;\n * }}\n */\n_s(Acccount, \"U4PMAgORDvrTbde6uLfXiArM0BA=\", false, function () {\n  return [useLoaderData];\n});\n_c = Acccount;\nfunction AccountLayout({\n  customer,\n  children\n}) {\n  const heading = customer ? customer.firstName ? `Welcome, ${customer.firstName}` : `Welcome to your account.` : 'Account Details';\n  return <div className=\"account\">\n      <h1>{heading}</h1>\n      <br />\n      <AccountMenu />\n      {children}\n    </div>;\n}\n_c2 = AccountLayout;\nfunction AccountMenu() {\n  function isActiveStyle({\n    isActive,\n    isPending\n  }) {\n    return {\n      fontWeight: isActive ? 'bold' : undefined,\n      color: isPending ? 'grey' : 'black'\n    };\n  }\n  return <nav role=\"navigation\">\n      <NavLink to=\"/account/orders\" style={isActiveStyle}>\n        Orders &nbsp;\n      </NavLink>\n      &nbsp;|&nbsp;\n      <NavLink to=\"/account/profile\" style={isActiveStyle}>\n        &nbsp; Profile &nbsp;\n      </NavLink>\n      &nbsp;|&nbsp;\n      <NavLink to=\"/account/addresses\" style={isActiveStyle}>\n        &nbsp; Addresses &nbsp;\n      </NavLink>\n      &nbsp;|&nbsp;\n      <Logout />\n    </nav>;\n}\n_c3 = AccountMenu;\nfunction Logout() {\n  return <Form className=\"account-logout\" method=\"POST\" action=\"/account/logout\">\n      &nbsp;<button type=\"submit\">Sign out</button>\n    </Form>;\n}\n_c4 = Logout;\nexport const CUSTOMER_FRAGMENT = `#graphql\n  fragment Customer on Customer {\n    acceptsMarketing\n    addresses(first: 6) {\n      nodes {\n        ...Address\n      }\n    }\n    defaultAddress {\n      ...Address\n    }\n    email\n    firstName\n    lastName\n    numberOfOrders\n    phone\n  }\n  fragment Address on MailingAddress {\n    id\n    formatted\n    firstName\n    lastName\n    company\n    address1\n    address2\n    country\n    province\n    city\n    zip\n    phone\n  }\n`;\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/queries/customer\nconst CUSTOMER_QUERY = `#graphql\n  query Customer(\n    $customerAccessToken: String!\n    $country: CountryCode\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    customer(customerAccessToken: $customerAccessToken) {\n      ...Customer\n    }\n  }\n  ${CUSTOMER_FRAGMENT}\n`;\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @typedef {import('storefrontapi.generated').CustomerFragment} CustomerFragment */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Acccount\");\n$RefreshReg$(_c2, \"AccountLayout\");\n$RefreshReg$(_c3, \"AccountMenu\");\n$RefreshReg$(_c4, \"Logout\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
