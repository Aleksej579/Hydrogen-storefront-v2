{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).blogs.$blogHandle.$articleHandle.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/($locale).blogs.$blogHandle.$articleHandle.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/($locale).blogs.$blogHandle.$articleHandle.jsx\");\n  import.meta.hot.lastModified = \"1702303141154.8918\";\n}\n// REMIX HMR END\n\nimport { json } from '@shopify/remix-oxygen';\nimport { useLoaderData } from '@remix-run/react';\nimport { Image } from '@shopify/hydrogen';\n\n/**\n * @type {MetaFunction<typeof loader>}\n */\nexport const meta = ({\n  data\n}) => {\n  return [{\n    title: `Hydrogen | ${data?.article.title ?? ''} article`\n  }];\n};\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({\n  params,\n  context\n}) {\n  const {\n    blogHandle,\n    articleHandle\n  } = params;\n  if (!articleHandle || !blogHandle) {\n    throw new Response('Not found', {\n      status: 404\n    });\n  }\n  const {\n    blog\n  } = await context.storefront.query(ARTICLE_QUERY, {\n    variables: {\n      blogHandle,\n      articleHandle\n    }\n  });\n  if (!blog?.articleByHandle) {\n    throw new Response(null, {\n      status: 404\n    });\n  }\n  const article = blog.articleByHandle;\n  return json({\n    article\n  });\n}\nexport default function Article() {\n  _s();\n  /** @type {LoaderReturnData} */\n  const {\n    article\n  } = useLoaderData();\n  const {\n    title,\n    image,\n    contentHtml,\n    author\n  } = article;\n  const publishedDate = new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }).format(new Date(article.publishedAt));\n  return <div className=\"article\">\n      <h1>\n        {title}\n        <span>\n          {publishedDate} &middot; {author?.name}\n        </span>\n      </h1>\n\n      {image && <Image data={image} sizes=\"90vw\" loading=\"eager\" />}\n      <div dangerouslySetInnerHTML={{\n      __html: contentHtml\n    }} className=\"article\" />\n    </div>;\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/objects/blog#field-blog-articlebyhandle\n_s(Article, \"pbTutVikDQywL53RJU9juI2RNaI=\", false, function () {\n  return [useLoaderData];\n});\n_c = Article;\nconst ARTICLE_QUERY = `#graphql\n  query Article(\n    $articleHandle: String!\n    $blogHandle: String!\n    $country: CountryCode\n    $language: LanguageCode\n  ) @inContext(language: $language, country: $country) {\n    blog(handle: $blogHandle) {\n      articleByHandle(handle: $articleHandle) {\n        title\n        contentHtml\n        publishedAt\n        author: authorV2 {\n          name\n        }\n        image {\n          id\n          altText\n          url\n          width\n          height\n        }\n        seo {\n          description\n          title\n        }\n      }\n    }\n  }\n`;\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @template T @typedef {import('@remix-run/react').MetaFunction<T>} MetaFunction */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\nvar _c;\n$RefreshReg$(_c, \"Article\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AA0FQ;AAzFR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,gEAAkE,EAAE;AAAA,EAC7G;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2D;AAC3D,cAAY,IAAI,eAAe;AACjC;AAUO,IAAM,OAAO,CAAC;AAAA,EACnB;AACF,MAAM;AACJ,SAAO,CAAC;AAAA,IACN,OAAO,cAAc,MAAM,QAAQ,SAAS;AAAA,EAC9C,CAAC;AACH;AAoCe,SAAR,UAA2B;AAChC,KAAG;AAEH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,gBAAgB,IAAI,KAAK,eAAe,SAAS;AAAA,IACrD,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,EACP,CAAC,EAAE,OAAO,IAAI,KAAK,QAAQ,WAAW,CAAC;AACvC,SAAO,mDAAC,SAAI,WAAU,WAClB;AAAA,uDAAC,QACE;AAAA;AAAA,MACD,mDAAC,UACE;AAAA;AAAA,QAAc;AAAA,QAAW,QAAQ;AAAA,WADpC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IAEC,SAAS,mDAAC,SAAM,MAAM,OAAO,OAAM,QAAO,SAAQ,WAAzC;AAAA;AAAA;AAAA;AAAA,WAAiD;AAAA,IAC3D,mDAAC,SAAI,yBAAyB;AAAA,MAC9B,QAAQ;AAAA,IACV,GAAG,WAAU,aAFX;AAAA;AAAA;AAAA;AAAA,WAEqB;AAAA,OAXlB;AAAA;AAAA;AAAA;AAAA,SAYL;AACJ;AAGA,GAAG,SAAS,gCAAgC,OAAO,WAAY;AAC7D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AAmCL,IAAI;AACJ,aAAa,IAAI,SAAS;AAE1B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
