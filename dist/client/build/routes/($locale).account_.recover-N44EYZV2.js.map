{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account_.recover.jsx"],
  "sourcesContent": ["import {json, redirect} from '@shopify/remix-oxygen';\nimport {Form, Link, useActionData} from '@remix-run/react';\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({context}) {\n  const customerAccessToken = await context.session.get('customerAccessToken');\n  if (customerAccessToken) {\n    return redirect('/account');\n  }\n\n  return json({});\n}\n\n/**\n * @param {ActionFunctionArgs}\n */\nexport async function action({request, context}) {\n  const {storefront} = context;\n  const form = await request.formData();\n  const email = form.has('email') ? String(form.get('email')) : null;\n\n  if (request.method !== 'POST') {\n    return json({error: 'Method not allowed'}, {status: 405});\n  }\n\n  try {\n    if (!email) {\n      throw new Error('Please provide an email.');\n    }\n    await storefront.mutate(CUSTOMER_RECOVER_MUTATION, {\n      variables: {email},\n    });\n\n    return json({resetRequested: true});\n  } catch (error) {\n    const resetRequested = false;\n    if (error instanceof Error) {\n      return json({error: error.message, resetRequested}, {status: 400});\n    }\n    return json({error, resetRequested}, {status: 400});\n  }\n}\n\nexport default function Recover() {\n  /** @type {ActionReturnData} */\n  const action = useActionData();\n\n  return (\n    <div className=\"account-recover\">\n      <div>\n        {action?.resetRequested ? (\n          <>\n            <h1>Request Sent.</h1>\n            <p>\n              If that email address is in our system, you will receive an email\n              with instructions about how to reset your password in a few\n              minutes.\n            </p>\n            <br />\n            <Link to=\"/account/login\">Return to Login</Link>\n          </>\n        ) : (\n          <>\n            <h1>Forgot Password.</h1>\n            <p>\n              Enter the email address associated with your account to receive a\n              link to reset your password.\n            </p>\n            <br />\n            <Form method=\"POST\">\n              <fieldset>\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  aria-label=\"Email address\"\n                  autoComplete=\"email\"\n                  // eslint-disable-next-line jsx-a11y/no-autofocus\n                  autoFocus\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email address\"\n                  required\n                  type=\"email\"\n                />\n              </fieldset>\n              {action?.error ? (\n                <p>\n                  <mark>\n                    <small>{action.error}</small>\n                  </mark>\n                </p>\n              ) : (\n                <br />\n              )}\n              <button type=\"submit\">Request Reset Link</button>\n            </Form>\n            <div>\n              <br />\n              <p>\n                <Link to=\"/account/login\">Login \u2192</Link>\n              </p>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/mutations/customerrecover\nconst CUSTOMER_RECOVER_MUTATION = `#graphql\n  mutation customerRecover(\n    $email: String!,\n    $country: CountryCode,\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    customerRecover(email: $email) {\n      customerUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`;\n\n/**\n * @typedef {{\n *   error?: string;\n *   resetRequested?: boolean;\n * }} ActionResponse\n */\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @typedef {import('@shopify/remix-oxygen').ActionFunctionArgs} ActionFunctionArgs */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof action>} ActionReturnData */\n"],
  "mappings": "+HAqDU,IAAAA,EAAA,OARK,SAARC,GAA2B,CAEhC,IAAMC,EAASC,EAAc,EAE7B,SACE,OAAC,OAAI,UAAU,kBACb,mBAAC,OACE,SAAAD,GAAQ,kBACP,oBACE,oBAAC,MAAG,yBAAa,KACjB,OAAC,KAAE,kJAIH,KACA,OAAC,OAAG,KACJ,OAACE,EAAA,CAAK,GAAG,iBAAiB,2BAAe,GAC3C,KAEA,oBACE,oBAAC,MAAG,4BAAgB,KACpB,OAAC,KAAE,0GAGH,KACA,OAAC,OAAG,KACJ,QAACC,EAAA,CAAK,OAAO,OACX,qBAAC,YACC,oBAAC,SAAM,QAAQ,QAAQ,iBAAK,KAC5B,OAAC,SACC,aAAW,gBACX,aAAa,QAEb,UAAS,GACT,GAAG,QACH,KAAK,QACL,YAAY,gBACZ,SAAQ,GACR,KAAK,QACP,GACF,EACCH,GAAQ,SACP,OAAC,KACC,mBAAC,QACC,mBAAC,SAAO,SAAAA,EAAO,MAAM,EACvB,EACF,KAEA,OAAC,OAAG,KAEN,OAAC,UAAO,KAAK,SAAS,8BAAkB,GAC1C,KACA,QAAC,OACC,oBAAC,OAAG,KACJ,OAAC,KACC,mBAACE,EAAA,CAAK,GAAG,iBAAiB,wBAAO,EACnC,GACF,GACF,EAEJ,EACF,CAEJ",
  "names": ["import_jsx_runtime", "Recover", "action", "useActionData", "Link", "Form"]
}
