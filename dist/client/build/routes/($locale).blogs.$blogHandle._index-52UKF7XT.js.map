{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).blogs.$blogHandle._index.jsx"],
  "sourcesContent": ["import {json} from '@shopify/remix-oxygen';\nimport {Link, useLoaderData} from '@remix-run/react';\nimport {Image, Pagination, getPaginationVariables} from '@shopify/hydrogen';\n\n/**\n * @type {MetaFunction<({ request, params, context: { storefront }, }: LoaderFunctionArgs) => unknown>}\n */\nexport const meta = ({data}) => {\n  return [{title: `Hydrogen | ${data?.blog.title ?? ''} blog`}];\n};\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport const loader = async ({request, params, context: {storefront}}) => {\n  const paginationVariables = getPaginationVariables(request, {\n    pageBy: 4,\n  });\n\n  if (!params.blogHandle) {\n    throw new Response(`blog not found`, {status: 404});\n  }\n\n  const {blog} = await storefront.query(BLOGS_QUERY, {\n    variables: {\n      blogHandle: params.blogHandle,\n      ...paginationVariables,\n    },\n  });\n\n  if (!blog?.articles) {\n    throw new Response('Not found', {status: 404});\n  }\n\n  return json({blog});\n};\n\nexport default function Blog() {\n  /** @type {LoaderReturnData} */\n  const {blog} = useLoaderData();\n  const {articles} = blog;\n\n  return (\n    <div className=\"blog mt-6\">\n      <h1>{blog.title}</h1>\n      <div className=\"blog-grid\">\n        <Pagination connection={articles}>\n          {({nodes, isLoading, PreviousLink, NextLink}) => {\n            return (\n              <>\n                <PreviousLink>\n                  {isLoading ? 'Loading...' : <span>\u2191 Load previous</span>}\n                </PreviousLink>\n                {nodes.map((article, index) => {\n                  return (\n                    <ArticleItem\n                      article={article}\n                      key={article.id}\n                      loading={index < 2 ? 'eager' : 'lazy'}\n                    />\n                  );\n                })}\n                <NextLink>\n                  {isLoading ? 'Loading...' : <span>Load more \u2193</span>}\n                </NextLink>\n              </>\n            );\n          }}\n        </Pagination>\n      </div>\n    </div>\n  );\n}\n\n/**\n * @param {{\n *   article: ArticleItemFragment;\n *   loading?: HTMLImageElement['loading'];\n * }}\n */\nfunction ArticleItem({article, loading}) {\n  const publishedAt = new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  }).format(new Date(article.publishedAt));\n  return (\n    <div className=\"blog-article\" key={article.id}>\n      <Link to={`/blogs/${article.blog.handle}/${article.handle}`}>\n        {article.image && (\n          <div className=\"blog-article-image\">\n            <Image\n              alt={article.image.altText || article.title}\n              aspectRatio=\"3/2\"\n              data={article.image}\n              loading={loading}\n              sizes=\"(min-width: 768px) 50vw, 100vw\"\n            />\n          </div>\n        )}\n        <h3>{article.title}</h3>\n        <small>{publishedAt}</small>\n      </Link>\n    </div>\n  );\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/objects/blog\nconst BLOGS_QUERY = `#graphql\n  query Blog(\n    $language: LanguageCode\n    $blogHandle: String!\n    $first: Int\n    $last: Int\n    $startCursor: String\n    $endCursor: String\n  ) @inContext(language: $language) {\n    blog(handle: $blogHandle) {\n      title\n      seo {\n        title\n        description\n      }\n      articles(\n        first: $first,\n        last: $last,\n        before: $startCursor,\n        after: $endCursor\n      ) {\n        nodes {\n          ...ArticleItem\n        }\n        pageInfo {\n          hasPreviousPage\n          hasNextPage\n          hasNextPage\n          endCursor\n          startCursor\n        }\n\n      }\n    }\n  }\n  fragment ArticleItem on Article {\n    author: authorV2 {\n      name\n    }\n    contentHtml\n    handle\n    id\n    image {\n      id\n      altText\n      url\n      width\n      height\n    }\n    publishedAt\n    title\n    blog {\n      handle\n    }\n  }\n`;\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @template T @typedef {import('@remix-run/react').MetaFunction<T>} MetaFunction */\n/** @typedef {import('storefrontapi.generated').ArticleItemFragment} ArticleItemFragment */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\n"],
  "mappings": "+KA4CM,IAAAA,EAAA,OArCOC,EAAO,CAAC,CAAC,KAAAC,CAAI,IACjB,CAAC,CAAC,MAAO,cAAcA,GAAM,KAAK,OAAS,SAAS,CAAC,EA6B/C,SAARC,GAAwB,CAE7B,GAAM,CAAC,KAAAC,CAAI,EAAIC,EAAc,EACvB,CAAC,SAAAC,CAAQ,EAAIF,EAEnB,SACE,QAAC,OAAI,UAAU,YACb,oBAAC,MAAI,SAAAA,EAAK,MAAM,KAChB,OAAC,OAAI,UAAU,YACb,mBAACG,EAAA,CAAW,WAAYD,EACrB,UAAC,CAAC,MAAAE,EAAO,UAAAC,EAAW,aAAAC,EAAc,SAAAC,CAAQ,OAEvC,oBACE,oBAACD,EAAA,CACE,SAAAD,EAAY,gBAAe,OAAC,QAAK,gCAAe,EACnD,EACCD,EAAM,IAAI,CAACI,EAASC,OAEjB,OAACC,EAAA,CACC,QAASF,EAET,QAASC,EAAQ,EAAI,QAAU,QAD1BD,EAAQ,EAEf,CAEH,KACD,OAACD,EAAA,CACE,SAAAF,EAAY,gBAAe,OAAC,QAAK,4BAAW,EAC/C,GACF,EAGN,EACF,GACF,CAEJ,CAQA,SAASK,EAAY,CAAC,QAAAF,EAAS,QAAAG,CAAO,EAAG,CACvC,IAAMC,EAAc,IAAI,KAAK,eAAe,QAAS,CACnD,KAAM,UACN,MAAO,OACP,IAAK,SACP,CAAC,EAAE,OAAO,IAAI,KAAKJ,EAAQ,WAAW,CAAC,EACvC,SACE,OAAC,OAAI,UAAU,eACb,oBAACK,EAAA,CAAK,GAAI,UAAUL,EAAQ,KAAK,UAAUA,EAAQ,SAChD,UAAAA,EAAQ,UACP,OAAC,OAAI,UAAU,qBACb,mBAACM,EAAA,CACC,IAAKN,EAAQ,MAAM,SAAWA,EAAQ,MACtC,YAAY,MACZ,KAAMA,EAAQ,MACd,QAASG,EACT,MAAM,iCACR,EACF,KAEF,OAAC,MAAI,SAAAH,EAAQ,MAAM,KACnB,OAAC,SAAO,SAAAI,EAAY,GACtB,GAfiCJ,EAAQ,EAgB3C,CAEJ",
  "names": ["import_jsx_runtime", "meta", "data", "Blog", "blog", "useLoaderData", "articles", "rr", "nodes", "isLoading", "PreviousLink", "NextLink", "article", "index", "ArticleItem", "loading", "publishedAt", "Link", "Image"]
}
