{
  "version": 3,
  "sources": ["../../../../node_modules/@shopify/hydrogen/src/seo/log-seo-tags.ts"],
  "sourcesContent": ["import type {CustomHeadTagObject} from './generate-seo-tags';\n\nexport default function Logger({headTags}: {headTags: CustomHeadTagObject[]}) {\n  logSeoTags(headTags);\n\n  return null;\n}\n\nconst headingStyle = 'text-transform: uppercase;';\nconst titleStyle =\n  'text-transform: uppercase; font-weight: bold; text-transform: uppercase;font-weight: bold';\n\nexport function logSeoTags(headTags: CustomHeadTagObject[]) {\n  console.log(' ');\n  console.log('%cSEO Meta Tags', `${titleStyle}`);\n  console.log(' ');\n\n  headTags.forEach((tag) => {\n    if (tag.tag === 'script') {\n      console.log(`%c• JSON LD `, headingStyle);\n\n      if (tag.children) {\n        try {\n          console.table(JSON.parse(tag.children), ['name', 'content']);\n        } catch {\n          console.log(tag.children);\n        }\n      }\n    } else {\n      console.log(`%c• ${tag.tag} `, headingStyle);\n\n      if (tag.children) {\n        if (typeof tag.children === 'string') {\n          console.log(`↳ ${tag.children}`);\n        } else {\n          try {\n            Object.entries(JSON.parse(tag.children)).map(([key, val]) =>\n              console.log(`↳ ${val}`),\n            );\n          } catch {\n            console.log(tag.children);\n          }\n        }\n      }\n\n      if (tag.props.property === 'og:image:url') {\n        const urlKey = tag.props.content as string;\n\n        fetchImage(urlKey)\n          .then((image) => {\n            const imageStyle = `font-size: 400px; padding: 10px; background: white url(${image}) no-repeat center; background-size: contain;`;\n\n            console.log(`%c• Share image preview`, headingStyle);\n            console.log('%c  ', imageStyle);\n            console.log(`↳ ${urlKey}`);\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }\n\n      Object.entries(tag.props).map(([key, val]) => {\n        console.log(`↳ ${key} → ${val}`);\n      });\n    }\n    console.log(' ');\n  });\n}\n\nasync function fetchImage(url: string) {\n  const result = await fetch(url);\n  const data = await result.blob();\n  const buff = await data.arrayBuffer();\n  const base64String = arrayBufferToBase64(buff);\n\n  return `data:image/png;base64,${base64String}`;\n}\n\nfunction arrayBufferToBase64(buffer: ArrayBuffer) {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n\n  for (let index = 0; index < len; index++) {\n    binary += String.fromCharCode(bytes[index]);\n  }\n\n  return btoa(binary);\n}\n"],
  "mappings": "yCAEe,SAARA,EAAwB,CAAC,SAAAC,CAAQ,EAAsC,CAC5E,OAAAC,EAAWD,CAAQ,EAEZ,IACT,CAEA,IAAME,EAAe,6BACfC,EACJ,4FAEK,SAASF,EAAWD,EAAiC,CAC1D,QAAQ,IAAI,GAAG,EACf,QAAQ,IAAI,kBAAmB,GAAGG,GAAY,EAC9C,QAAQ,IAAI,GAAG,EAEfH,EAAS,QAASI,GAAQ,CACxB,GAAIA,EAAI,MAAQ,UAGd,GAFA,QAAQ,IAAI,oBAAgBF,CAAY,EAEpCE,EAAI,SACN,GAAI,CACF,QAAQ,MAAM,KAAK,MAAMA,EAAI,QAAQ,EAAG,CAAC,OAAQ,SAAS,CAAC,CAC7D,MAAA,CACE,QAAQ,IAAIA,EAAI,QAClB,CAAA,MAKF,CAFA,GAAA,QAAQ,IAAI,YAAWC,EAAG,OAEtBD,CAAAA,EAAIC,EAAA,SACF,GAAA,OAAWA,EAAA,UAAa,SAC1B,QAAQ,IAAI,UAASA,EAAA,UAAU,MAE3B,IACF,CAAA,OAAO,QAAQ,KAAK,MAAUA,EAAA,QAAW,CAAA,EAAA,IAAMC,CAAKC,CAAG,EAAAC,CAAA,IACrD,QAAQ,IAAI,UAAUA,GAE1B,CAAA,CAAA,MAAA,CACE,QAAYJ,IAAIC,EAAA,QAKtB,CAAID,CAAI,GAAAC,EAAA,MAAM,WAAa,eACnBI,CAAAA,IAAa,EAAAJ,EAAA,MAAM,QAGtBK,EAAA,CAAA,EAAMC,KACLH,GAAMI,CAAAA,IAAa,EAAA,0DAA+DJ,iDAElF,QAAY,IAAA,+BACZK,CAAA,EAAA,QAAY,IAAA,OACZ,CAAA,EAAA,QAAY,IAAA,UACb,GACA,CAAA,CAAA,EAAOC,MACNN,GAAA,CAAA,QAAcM,MAIpBN,CAAA,CAAA,CAAA,EAAO,OAAQJ,QAASC,EAAE,KAAMC,EAAKC,IAAG,CAAM,CAC5C,EAAAC,CAAA,IAAA,CAAQ,QAAI,IAAA,UAAQ,YAGxBA,GAAA,CAAA,CAAA,EAAQ,QAEZ,IAEA,GAAA,CAAA,CAAA,CAAA,CAAA,eAGeE,EAAA,EAAA,CADA,IAAA,EADE,MAAM,MAAMK,MACD,MACF,CAAA,GAAA,KAAA,GAAY,YAG7B,EAAA,MAAA,yBAGTC,EAAA,CAASC,GAAoBC,CAAqB,SACnCF,EACPG,EAAQ,CAAA,IAAId,EAAA,GAAA,EAAA,IAAiB,WACjB,CAAA,EAAAG,EAElB,EAAA,WAAoBY,QAClBC,EAAU,EAAA,EAAAb,EAAA,IAAOH,GAAA,OAAac,aAGzB,EAAA,CAAA,CAAA,EAAW,OACpB,KAAAd,CAAA,CAAA",
  "names": ["Logger", "headTags", "logSeoTags", "headingStyle", "titleStyle", "tag", "e", "key", "val", "o", "urlKey", "i", "image", "imageStyle", "c", "err", "url", "g", "arrayBufferToBase64", "buffer", "bytes", "index", "binary"]
}
